MEMORY {
    HEADER: start = 0, size = $0010, type = ro, file = %O, fill=yes, fillval=$00;

    ZP:     start = $00,    size = $0100, type = rw, file = "";
    OAM:    start = $0200,  size = $0100, type = rw, file = "";
    RAM:    start = $0300,  size = $0500, type = rw, file = "";
    # SRAM:   start = $6000,  size = $2000, type = rw, file = %O, fill = yes, fillval = $ff;

    # 8k bank #0
    PRG_0:  start = $8000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $ff;
    # 8k bank #1
    PRG_1:  start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $ff;
    # 8k bank #2
    PRG_2:  start = $c000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $ff;

    # fixed bank
    PRGLast:start = $e000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $ff;

    # add more CHR banks here
    CHR:    start = $0000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $ff;
}

SEGMENTS {
    INESHDR:  load = HEADER, type = ro, align = $10;

    ZEROPAGE:   load = ZP,      type = zp;
    OAM:        load = OAM,     type = bss, align = $100;
    BSS:        load = RAM,     type = bss, align = $100;
    TILES:      load = CHR,     type = ro;
    # SRAM:       load = SRAM,    type = rw;

    # Audio data for music
    AUDIO:      load = PRG_0,   type = ro;
    # Famistudio code
    AUDIO_CODE: load = PRG_1,   type = ro;
    # DMC tracks for audio and sfx. This has to be in $c000 or higher,
    # but it can't be banked out while DMC audio is playing...
    # define = "yes" creates the symbol __AUDIO_DMC_LOAD__ that we can use
    # to determine the start location for the DMC audio
    AUDIO_DMC:  load = PRG_2,   type = ro,  define=yes;

    FIXED:      load = PRGLast, type = ro;
    VECTORS:    load = PRGLast, type = ro,  start = $fffa;
}
